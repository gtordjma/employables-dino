{"code":"!function(e){function t(t){for(var s,a,r=t[0],h=t[1],d=t[2],c=0,g=[];c<r.length;c++)a=r[c],Object.prototype.hasOwnProperty.call(n,a)&&n[a]&&g.push(n[a][0]),n[a]=0;for(s in h)Object.prototype.hasOwnProperty.call(h,s)&&(e[s]=h[s]);for(l&&l(t);g.length;)g.shift()();return o.push.apply(o,d||[]),i()}function i(){for(var e,t=0;t<o.length;t++){for(var i=o[t],s=!0,r=1;r<i.length;r++){var h=i[r];0!==n[h]&&(s=!1)}s&&(o.splice(t--,1),e=a(a.s=i[0]))}return e}var s={},n={0:0},o=[];function a(t){if(s[t])return s[t].exports;var i=s[t]={i:t,l:!1,exports:{}};return e[t].call(i.exports,i,i.exports,a),i.l=!0,i.exports}a.m=e,a.c=s,a.d=function(e,t,i){a.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:i})},a.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},a.t=function(e,t){if(1&t&&(e=a(e)),8&t)return e;if(4&t&&\"object\"==typeof e&&e&&e.__esModule)return e;var i=Object.create(null);if(a.r(i),Object.defineProperty(i,\"default\",{enumerable:!0,value:e}),2&t&&\"string\"!=typeof e)for(var s in e)a.d(i,s,function(t){return e[t]}.bind(null,s));return i},a.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return a.d(t,\"a\",t),t},a.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},a.p=\"\";var r=window.webpackJsonp=window.webpackJsonp||[],h=r.push.bind(r);r.push=t,r=r.slice();for(var d=0;d<r.length;d++)t(r[d]);var l=h;o.push([1,1]),i()}([,function(e,t,i){\"use strict\";i.r(t);var s=i(0),n=i.n(s);class o extends n.a.Scene{constructor(){super(\"PlayScene\")}create(){const{height:e,width:t}=this.game.config;this.gameSpeed=10,this.isGameRunning=!1,this.respawnTime=0,this.score=0,this.jumpSound=this.sound.add(\"jump\",{volume:.2}),this.hitSound=this.sound.add(\"hit\",{volume:.2}),this.reachSound=this.sound.add(\"reach\",{volume:.2}),this.startTrigger=this.physics.add.sprite(0,10).setOrigin(0,1).setImmovable(),this.ground=this.add.tileSprite(0,e,88,26,\"ground\").setOrigin(0,1),this.dino=this.physics.add.sprite(0,e,\"dino-idle\").setCollideWorldBounds(!0).setGravityY(5e3).setBodySize(44,92).setDepth(1).setOrigin(0,1),this.scoreText=this.add.text(t,0,\"00000\",{fill:\"#535353\",font:\"900 35px Courier\",resolution:5}).setOrigin(1,0).setAlpha(0),this.highScoreText=this.add.text(0,0,\"00000\",{fill:\"#535353\",font:\"900 35px Courier\",resolution:5}).setOrigin(1,0).setAlpha(0),this.environment=this.add.group(),this.environment.addMultiple([this.add.image(t/2,170,\"cloud\"),this.add.image(t-80,80,\"cloud\"),this.add.image(t/1.3,100,\"cloud\")]),this.environment.setAlpha(0),this.gameOverScreen=this.add.container(t/2,e/2-50).setAlpha(0),this.gameOverText=this.add.image(0,0,\"game-over\"),this.restart=this.add.image(0,80,\"restart\").setInteractive(),this.gameOverScreen.add([this.gameOverText,this.restart]),this.obsticles=this.physics.add.group(),this.initAnims(),this.initStartTrigger(),this.initColliders(),this.handleInputs(),this.handleScore()}initColliders(){this.physics.add.collider(this.dino,this.obsticles,(()=>{this.highScoreText.x=this.scoreText.x-this.scoreText.width-20;const e=this.highScoreText.text.substr(this.highScoreText.text.length-5),t=Number(this.scoreText.text)>Number(e)?this.scoreText.text:e;this.highScoreText.setText(\"HI \"+t),this.highScoreText.setAlpha(1),this.physics.pause(),this.isGameRunning=!1,this.anims.pauseAll(),this.dino.setTexture(\"dino-hurt\"),this.respawnTime=0,this.gameSpeed=10,this.gameOverScreen.setAlpha(1),this.score=0,this.hitSound.play()}),null,this)}initStartTrigger(){const{width:e,height:t}=this.game.config;this.physics.add.overlap(this.startTrigger,this.dino,(()=>{if(10===this.startTrigger.y)return void this.startTrigger.body.reset(0,t);this.startTrigger.disableBody(!0,!0);const i=this.time.addEvent({delay:1e3/60,loop:!0,callbackScope:this,callback:()=>{this.dino.setVelocityX(80),this.dino.play(\"dino-run\",1),this.ground.width<e&&(this.ground.width+=34),this.ground.width>=1e3&&(this.ground.width=e,this.isGameRunning=!0,this.dino.setVelocityX(0),this.scoreText.setAlpha(1),this.environment.setAlpha(1),i.remove())}})}),null,this)}initAnims(){this.anims.create({key:\"dino-run\",frames:this.anims.generateFrameNumbers(\"dino\",{start:2,end:3}),frameRate:10,repeat:-1}),this.anims.create({key:\"dino-down-anim\",frames:this.anims.generateFrameNumbers(\"dino-down\",{start:0,end:1}),frameRate:10,repeat:-1}),this.anims.create({key:\"enemy-dino-fly\",frames:this.anims.generateFrameNumbers(\"enemy-bird\",{start:0,end:1}),frameRate:6,repeat:-1})}handleScore(){this.time.addEvent({delay:100,loop:!0,callbackScope:this,callback:()=>{if(!this.isGameRunning)return;this.score++,this.gameSpeed+=.01,this.score%100==0&&(this.reachSound.play(),this.tweens.add({targets:this.scoreText,duration:100,repeat:3,alpha:0,yoyo:!0}));const e=Array.from(String(this.score),Number);for(let t=0;t<5-String(this.score).length;t++)e.unshift(0);this.scoreText.setText(e.join(\"\"))}})}handleInputs(){this.restart.on(\"pointerdown\",(()=>{this.dino.setVelocityY(0),this.dino.body.height=92,this.dino.body.offset.y=0,this.physics.resume(),this.obsticles.clear(!0,!0),this.isGameRunning=!0,this.gameOverScreen.setAlpha(0),this.anims.resumeAll()})),this.input.keyboard.on(\"keydown_SPACE\",(()=>{!this.dino.body.onFloor()||this.dino.body.velocity.x>0||(this.jumpSound.play(),this.dino.body.height=92,this.dino.body.offset.y=0,this.dino.setVelocityY(-1600),this.dino.setTexture(\"dino\",0))})),this.input.keyboard.on(\"keydown_DOWN\",(()=>{this.dino.body.onFloor()&&this.isGameRunning&&(this.dino.body.height=58,this.dino.body.offset.y=34)})),this.input.keyboard.on(\"keyup_DOWN\",(()=>{(0===this.score||this.isGameRunning)&&(this.dino.body.height=92,this.dino.body.offset.y=0)}))}placeObsticle(){const e=Math.floor(7*Math.random())+1,t=n.a.Math.Between(600,900);let i;if(e>6){const e=[20,50];i=this.obsticles.create(this.game.config.width+t,this.game.config.height-e[Math.floor(2*Math.random())],\"enemy-bird\").setOrigin(0,1),i.play(\"enemy-dino-fly\",1),i.body.height=i.body.height/1.5}else i=this.obsticles.create(this.game.config.width+t,this.game.config.height,\"obsticle-\"+e).setOrigin(0,1),i.body.offset.y=10;i.setImmovable()}update(e,t){this.isGameRunning&&(this.ground.tilePositionX+=this.gameSpeed,n.a.Actions.IncX(this.obsticles.getChildren(),-this.gameSpeed),n.a.Actions.IncX(this.environment.getChildren(),-.5),this.respawnTime+=t*this.gameSpeed*.08,this.respawnTime>=1500&&(this.placeObsticle(),this.respawnTime=0),this.obsticles.getChildren().forEach((e=>{e.getBounds().right<0&&this.obsticles.killAndHide(e)})),this.environment.getChildren().forEach((e=>{e.getBounds().right<0&&(e.x=this.game.config.width+30)})),this.dino.body.deltaAbsY()>0?(this.dino.anims.stop(),this.dino.setTexture(\"dino\",0)):this.dino.body.height<=58?this.dino.play(\"dino-down-anim\",!0):this.dino.play(\"dino-run\",!0))}}var a=o;class r extends n.a.Scene{constructor(){super(\"PreloadScene\")}preload(){this.load.audio(\"jump\",\"assets/jump.m4a\"),this.load.audio(\"hit\",\"assets/hit.m4a\"),this.load.audio(\"reach\",\"assets/reach.m4a\"),this.load.image(\"ground\",\"assets/ground.png\"),this.load.image(\"dino-idle\",\"assets/dino-idle.png\"),this.load.image(\"dino-hurt\",\"assets/dino-hurt.png\"),this.load.image(\"restart\",\"assets/restart.png\"),this.load.image(\"game-over\",\"assets/game-over.png\"),this.load.image(\"cloud\",\"assets/cloud.png\"),this.load.spritesheet(\"star\",\"assets/stars.png\",{frameWidth:9,frameHeight:9}),this.load.spritesheet(\"moon\",\"assets/moon.png\",{frameWidth:20,frameHeight:40}),this.load.spritesheet(\"dino\",\"assets/dino-run.png\",{frameWidth:88,frameHeight:94}),this.load.spritesheet(\"dino-down\",\"assets/dino-down.png\",{frameWidth:118,frameHeight:94}),this.load.spritesheet(\"enemy-bird\",\"assets/enemy-bird.png\",{frameWidth:92,frameHeight:77}),this.load.image(\"obsticle-1\",\"assets/cactuses_small_1.png\"),this.load.image(\"obsticle-2\",\"assets/cactuses_small_2.png\"),this.load.image(\"obsticle-3\",\"assets/cactuses_small_3.png\"),this.load.image(\"obsticle-4\",\"assets/cactuses_big_1.png\"),this.load.image(\"obsticle-5\",\"assets/cactuses_big_2.png\"),this.load.image(\"obsticle-6\",\"assets/cactuses_big_3.png\")}create(){this.scene.start(\"PlayScene\")}}var h=r;const d={type:n.a.AUTO,width:1e3,height:340,pixelArt:!0,transparent:!0,physics:{default:\"arcade\",arcade:{debug:!1}},scene:[h,a]};new n.a.Game(d)}]);","name":"app.js","input":"/******/ (function(modules) { // webpackBootstrap\n/******/ \t// install a JSONP callback for chunk loading\n/******/ \tfunction webpackJsonpCallback(data) {\n/******/ \t\tvar chunkIds = data[0];\n/******/ \t\tvar moreModules = data[1];\n/******/ \t\tvar executeModules = data[2];\n/******/\n/******/ \t\t// add \"moreModules\" to the modules object,\n/******/ \t\t// then flag all \"chunkIds\" as loaded and fire callback\n/******/ \t\tvar moduleId, chunkId, i = 0, resolves = [];\n/******/ \t\tfor(;i < chunkIds.length; i++) {\n/******/ \t\t\tchunkId = chunkIds[i];\n/******/ \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n/******/ \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n/******/ \t\t\t}\n/******/ \t\t\tinstalledChunks[chunkId] = 0;\n/******/ \t\t}\n/******/ \t\tfor(moduleId in moreModules) {\n/******/ \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n/******/ \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n/******/ \t\t\t}\n/******/ \t\t}\n/******/ \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n/******/\n/******/ \t\twhile(resolves.length) {\n/******/ \t\t\tresolves.shift()();\n/******/ \t\t}\n/******/\n/******/ \t\t// add entry modules from loaded chunk to deferred list\n/******/ \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n/******/\n/******/ \t\t// run deferred modules when all chunks ready\n/******/ \t\treturn checkDeferredModules();\n/******/ \t};\n/******/ \tfunction checkDeferredModules() {\n/******/ \t\tvar result;\n/******/ \t\tfor(var i = 0; i < deferredModules.length; i++) {\n/******/ \t\t\tvar deferredModule = deferredModules[i];\n/******/ \t\t\tvar fulfilled = true;\n/******/ \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n/******/ \t\t\t\tvar depId = deferredModule[j];\n/******/ \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n/******/ \t\t\t}\n/******/ \t\t\tif(fulfilled) {\n/******/ \t\t\t\tdeferredModules.splice(i--, 1);\n/******/ \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n/******/ \t\t\t}\n/******/ \t\t}\n/******/\n/******/ \t\treturn result;\n/******/ \t}\n/******/\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// object to store loaded and loading chunks\n/******/ \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n/******/ \t// Promise = chunk loading, 0 = chunk loaded\n/******/ \tvar installedChunks = {\n/******/ \t\t0: 0\n/******/ \t};\n/******/\n/******/ \tvar deferredModules = [];\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// define __esModule on exports\n/******/ \t__webpack_require__.r = function(exports) {\n/******/ \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n/******/ \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n/******/ \t\t}\n/******/ \t\tObject.defineProperty(exports, '__esModule', { value: true });\n/******/ \t};\n/******/\n/******/ \t// create a fake namespace object\n/******/ \t// mode & 1: value is a module id, require it\n/******/ \t// mode & 2: merge all properties of value into the ns\n/******/ \t// mode & 4: return value when already ns object\n/******/ \t// mode & 8|1: behave like require\n/******/ \t__webpack_require__.t = function(value, mode) {\n/******/ \t\tif(mode & 1) value = __webpack_require__(value);\n/******/ \t\tif(mode & 8) return value;\n/******/ \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n/******/ \t\tvar ns = Object.create(null);\n/******/ \t\t__webpack_require__.r(ns);\n/******/ \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n/******/ \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n/******/ \t\treturn ns;\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n/******/ \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n/******/ \tjsonpArray.push = webpackJsonpCallback;\n/******/ \tjsonpArray = jsonpArray.slice();\n/******/ \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n/******/ \tvar parentJsonpFunction = oldJsonpFunction;\n/******/\n/******/\n/******/ \t// add entry module to deferred list\n/******/ \tdeferredModules.push([1,1]);\n/******/ \t// run deferred modules when ready\n/******/ \treturn checkDeferredModules();\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */,\n/* 1 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXTERNAL MODULE: ./node_modules/phaser/dist/phaser.js\nvar phaser = __webpack_require__(0);\nvar phaser_default = /*#__PURE__*/__webpack_require__.n(phaser);\n\n// CONCATENATED MODULE: ./src/PlayScene.js\n\n\nclass PlayScene_PlayScene extends phaser_default.a.Scene {\n  constructor() {\n    super('PlayScene');\n  }\n\n  create() {\n    const {\n      height,\n      width\n    } = this.game.config;\n    this.gameSpeed = 10;\n    this.isGameRunning = false;\n    this.respawnTime = 0;\n    this.score = 0;\n    this.jumpSound = this.sound.add('jump', {\n      volume: 0.2\n    });\n    this.hitSound = this.sound.add('hit', {\n      volume: 0.2\n    });\n    this.reachSound = this.sound.add('reach', {\n      volume: 0.2\n    });\n    this.startTrigger = this.physics.add.sprite(0, 10).setOrigin(0, 1).setImmovable();\n    this.ground = this.add.tileSprite(0, height, 88, 26, 'ground').setOrigin(0, 1);\n    this.dino = this.physics.add.sprite(0, height, 'dino-idle').setCollideWorldBounds(true).setGravityY(5000).setBodySize(44, 92).setDepth(1).setOrigin(0, 1);\n    this.scoreText = this.add.text(width, 0, \"00000\", {\n      fill: \"#535353\",\n      font: '900 35px Courier',\n      resolution: 5\n    }).setOrigin(1, 0).setAlpha(0);\n    this.highScoreText = this.add.text(0, 0, \"00000\", {\n      fill: \"#535353\",\n      font: '900 35px Courier',\n      resolution: 5\n    }).setOrigin(1, 0).setAlpha(0);\n    this.environment = this.add.group();\n    this.environment.addMultiple([this.add.image(width / 2, 170, 'cloud'), this.add.image(width - 80, 80, 'cloud'), this.add.image(width / 1.3, 100, 'cloud')]);\n    this.environment.setAlpha(0);\n    this.gameOverScreen = this.add.container(width / 2, height / 2 - 50).setAlpha(0);\n    this.gameOverText = this.add.image(0, 0, 'game-over');\n    this.restart = this.add.image(0, 80, 'restart').setInteractive();\n    this.gameOverScreen.add([this.gameOverText, this.restart]);\n    this.obsticles = this.physics.add.group();\n    this.initAnims();\n    this.initStartTrigger();\n    this.initColliders();\n    this.handleInputs();\n    this.handleScore();\n  }\n\n  initColliders() {\n    this.physics.add.collider(this.dino, this.obsticles, () => {\n      this.highScoreText.x = this.scoreText.x - this.scoreText.width - 20;\n      const highScore = this.highScoreText.text.substr(this.highScoreText.text.length - 5);\n      const newScore = Number(this.scoreText.text) > Number(highScore) ? this.scoreText.text : highScore;\n      this.highScoreText.setText('HI ' + newScore);\n      this.highScoreText.setAlpha(1);\n      this.physics.pause();\n      this.isGameRunning = false;\n      this.anims.pauseAll();\n      this.dino.setTexture('dino-hurt');\n      this.respawnTime = 0;\n      this.gameSpeed = 10;\n      this.gameOverScreen.setAlpha(1);\n      this.score = 0;\n      this.hitSound.play();\n    }, null, this);\n  }\n\n  initStartTrigger() {\n    const {\n      width,\n      height\n    } = this.game.config;\n    this.physics.add.overlap(this.startTrigger, this.dino, () => {\n      if (this.startTrigger.y === 10) {\n        this.startTrigger.body.reset(0, height);\n        return;\n      }\n\n      this.startTrigger.disableBody(true, true);\n      const startEvent = this.time.addEvent({\n        delay: 1000 / 60,\n        loop: true,\n        callbackScope: this,\n        callback: () => {\n          this.dino.setVelocityX(80);\n          this.dino.play('dino-run', 1);\n\n          if (this.ground.width < width) {\n            this.ground.width += 17 * 2;\n          }\n\n          if (this.ground.width >= 1000) {\n            this.ground.width = width;\n            this.isGameRunning = true;\n            this.dino.setVelocityX(0);\n            this.scoreText.setAlpha(1);\n            this.environment.setAlpha(1);\n            startEvent.remove();\n          }\n        }\n      });\n    }, null, this);\n  }\n\n  initAnims() {\n    this.anims.create({\n      key: 'dino-run',\n      frames: this.anims.generateFrameNumbers('dino', {\n        start: 2,\n        end: 3\n      }),\n      frameRate: 10,\n      repeat: -1\n    });\n    this.anims.create({\n      key: 'dino-down-anim',\n      frames: this.anims.generateFrameNumbers('dino-down', {\n        start: 0,\n        end: 1\n      }),\n      frameRate: 10,\n      repeat: -1\n    });\n    this.anims.create({\n      key: 'enemy-dino-fly',\n      frames: this.anims.generateFrameNumbers('enemy-bird', {\n        start: 0,\n        end: 1\n      }),\n      frameRate: 6,\n      repeat: -1\n    });\n  }\n\n  handleScore() {\n    this.time.addEvent({\n      delay: 1000 / 10,\n      loop: true,\n      callbackScope: this,\n      callback: () => {\n        if (!this.isGameRunning) {\n          return;\n        }\n\n        this.score++;\n        this.gameSpeed += 0.01;\n\n        if (this.score % 100 === 0) {\n          this.reachSound.play();\n          this.tweens.add({\n            targets: this.scoreText,\n            duration: 100,\n            repeat: 3,\n            alpha: 0,\n            yoyo: true\n          });\n        }\n\n        const score = Array.from(String(this.score), Number);\n\n        for (let i = 0; i < 5 - String(this.score).length; i++) {\n          score.unshift(0);\n        }\n\n        this.scoreText.setText(score.join(''));\n      }\n    });\n  }\n\n  handleInputs() {\n    this.restart.on('pointerdown', () => {\n      this.dino.setVelocityY(0);\n      this.dino.body.height = 92;\n      this.dino.body.offset.y = 0;\n      this.physics.resume();\n      this.obsticles.clear(true, true);\n      this.isGameRunning = true;\n      this.gameOverScreen.setAlpha(0);\n      this.anims.resumeAll();\n    });\n    this.input.keyboard.on('keydown_SPACE', () => {\n      if (!this.dino.body.onFloor() || this.dino.body.velocity.x > 0) {\n        return;\n      }\n\n      this.jumpSound.play();\n      this.dino.body.height = 92;\n      this.dino.body.offset.y = 0;\n      this.dino.setVelocityY(-1600);\n      this.dino.setTexture('dino', 0);\n    });\n    this.input.keyboard.on('keydown_DOWN', () => {\n      if (!this.dino.body.onFloor() || !this.isGameRunning) {\n        return;\n      }\n\n      this.dino.body.height = 58;\n      this.dino.body.offset.y = 34;\n    });\n    this.input.keyboard.on('keyup_DOWN', () => {\n      if (this.score !== 0 && !this.isGameRunning) {\n        return;\n      }\n\n      this.dino.body.height = 92;\n      this.dino.body.offset.y = 0;\n    });\n  }\n\n  placeObsticle() {\n    const obsticleNum = Math.floor(Math.random() * 7) + 1;\n    const distance = phaser_default.a.Math.Between(600, 900);\n    let obsticle;\n\n    if (obsticleNum > 6) {\n      const enemyHeight = [20, 50];\n      obsticle = this.obsticles.create(this.game.config.width + distance, this.game.config.height - enemyHeight[Math.floor(Math.random() * 2)], `enemy-bird`).setOrigin(0, 1);\n      obsticle.play('enemy-dino-fly', 1);\n      obsticle.body.height = obsticle.body.height / 1.5;\n    } else {\n      obsticle = this.obsticles.create(this.game.config.width + distance, this.game.config.height, `obsticle-${obsticleNum}`).setOrigin(0, 1);\n      obsticle.body.offset.y = +10;\n    }\n\n    obsticle.setImmovable();\n  }\n\n  update(time, delta) {\n    if (!this.isGameRunning) {\n      return;\n    }\n\n    this.ground.tilePositionX += this.gameSpeed;\n    phaser_default.a.Actions.IncX(this.obsticles.getChildren(), -this.gameSpeed);\n    phaser_default.a.Actions.IncX(this.environment.getChildren(), -0.5);\n    this.respawnTime += delta * this.gameSpeed * 0.08;\n\n    if (this.respawnTime >= 1500) {\n      this.placeObsticle();\n      this.respawnTime = 0;\n    }\n\n    this.obsticles.getChildren().forEach(obsticle => {\n      if (obsticle.getBounds().right < 0) {\n        this.obsticles.killAndHide(obsticle);\n      }\n    });\n    this.environment.getChildren().forEach(env => {\n      if (env.getBounds().right < 0) {\n        env.x = this.game.config.width + 30;\n      }\n    });\n\n    if (this.dino.body.deltaAbsY() > 0) {\n      this.dino.anims.stop();\n      this.dino.setTexture('dino', 0);\n    } else {\n      this.dino.body.height <= 58 ? this.dino.play('dino-down-anim', true) : this.dino.play('dino-run', true);\n    }\n  }\n\n}\n\n/* harmony default export */ var src_PlayScene = (PlayScene_PlayScene);\n// CONCATENATED MODULE: ./src/PreloadScene.js\n\n\nclass PreloadScene_PreloadScene extends phaser_default.a.Scene {\n  constructor() {\n    super('PreloadScene');\n  }\n\n  preload() {\n    this.load.audio('jump', 'assets/jump.m4a');\n    this.load.audio('hit', 'assets/hit.m4a');\n    this.load.audio('reach', 'assets/reach.m4a');\n    this.load.image('ground', 'assets/ground.png');\n    this.load.image('dino-idle', 'assets/dino-idle.png');\n    this.load.image('dino-hurt', 'assets/dino-hurt.png');\n    this.load.image('restart', 'assets/restart.png');\n    this.load.image('game-over', 'assets/game-over.png');\n    this.load.image('cloud', 'assets/cloud.png');\n    this.load.spritesheet('star', 'assets/stars.png', {\n      frameWidth: 9,\n      frameHeight: 9\n    });\n    this.load.spritesheet('moon', 'assets/moon.png', {\n      frameWidth: 20,\n      frameHeight: 40\n    });\n    this.load.spritesheet('dino', 'assets/dino-run.png', {\n      frameWidth: 88,\n      frameHeight: 94\n    });\n    this.load.spritesheet('dino-down', 'assets/dino-down.png', {\n      frameWidth: 118,\n      frameHeight: 94\n    });\n    this.load.spritesheet('enemy-bird', 'assets/enemy-bird.png', {\n      frameWidth: 92,\n      frameHeight: 77\n    });\n    this.load.image('obsticle-1', 'assets/cactuses_small_1.png');\n    this.load.image('obsticle-2', 'assets/cactuses_small_2.png');\n    this.load.image('obsticle-3', 'assets/cactuses_small_3.png');\n    this.load.image('obsticle-4', 'assets/cactuses_big_1.png');\n    this.load.image('obsticle-5', 'assets/cactuses_big_2.png');\n    this.load.image('obsticle-6', 'assets/cactuses_big_3.png');\n  }\n\n  create() {\n    this.scene.start('PlayScene');\n  }\n\n}\n\n/* harmony default export */ var src_PreloadScene = (PreloadScene_PreloadScene);\n// CONCATENATED MODULE: ./src/index.js\n\n\n\nconst config = {\n  type: phaser_default.a.AUTO,\n  width: 1000,\n  height: 340,\n  pixelArt: true,\n  transparent: true,\n  physics: {\n    default: 'arcade',\n    arcade: {\n      debug: false\n    }\n  },\n  scene: [src_PreloadScene, src_PlayScene]\n};\nnew phaser_default.a.Game(config);\n\n/***/ })\n/******/ ]);","inputSourceMap":null}